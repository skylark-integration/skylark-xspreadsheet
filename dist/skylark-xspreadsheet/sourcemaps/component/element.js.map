{"version":3,"sources":["component/element.js"],"names":["define","Element","[object Object]","tag","className","this","el","document","createElement","data","key","value","undefined","eventNames","handler","fen","oen","split","eventName","test","window","navigator","userAgent","addEventListener","evt","i","length","k","button","stopPropagation","Object","keys","forEach","css","offsetTop","offsetLeft","offsetHeight","offsetWidth","top","left","height","width","v","scrollLeft","scrollTop","getBoundingClientRect","parentNode","eles","arguments","childNodes","ele","child","removeChild","arg","createTextNode","appendChild","contains","name","classList","add","remove","cls","toggleClass","toggle","flag","addClass","removeClass","active","setAttribute","getAttribute","removeAttribute","content","innerHTML","focus","style","removeProperty","getComputedStyle","h"],"mappings":"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","file":"../../component/element.js","sourcesContent":["define(function () {\n    'use strict';\n    class Element {\n        constructor(tag, className = '') {\n            if (typeof tag === 'string') {\n                this.el = document.createElement(tag);\n                this.el.className = className;\n            } else {\n                this.el = tag;\n            }\n            this.data = {};\n        }\n        data(key, value) {\n            if (value !== undefined) {\n                this.data[key] = value;\n                return this;\n            }\n            return this.data[key];\n        }\n        on(eventNames, handler) {\n            const [fen, ...oen] = eventNames.split('.');\n            let eventName = fen;\n            if (eventName === 'mousewheel' && /Firefox/i.test(window.navigator.userAgent)) {\n                eventName = 'DOMMouseScroll';\n            }\n            this.el.addEventListener(eventName, evt => {\n                handler(evt);\n                for (let i = 0; i < oen.length; i += 1) {\n                    const k = oen[i];\n                    if (k === 'left' && evt.button !== 0) {\n                        return;\n                    }\n                    if (k === 'right' && evt.button !== 2) {\n                        return;\n                    }\n                    if (k === 'stop') {\n                        evt.stopPropagation();\n                    }\n                }\n            });\n            return this;\n        }\n        offset(value) {\n            if (value !== undefined) {\n                Object.keys(value).forEach(k => {\n                    this.css(k, `${ value[k] }px`);\n                });\n                return this;\n            }\n            const {offsetTop, offsetLeft, offsetHeight, offsetWidth} = this.el;\n            return {\n                top: offsetTop,\n                left: offsetLeft,\n                height: offsetHeight,\n                width: offsetWidth\n            };\n        }\n        scroll(v) {\n            const {el} = this;\n            if (v !== undefined) {\n                if (v.left !== undefined) {\n                    el.scrollLeft = v.left;\n                }\n                if (v.top !== undefined) {\n                    el.scrollTop = v.top;\n                }\n            }\n            return {\n                left: el.scrollLeft,\n                top: el.scrollTop\n            };\n        }\n        box() {\n            return this.el.getBoundingClientRect();\n        }\n        parent() {\n            return new Element(this.el.parentNode);\n        }\n        children(...eles) {\n            if (arguments.length === 0) {\n                return this.el.childNodes;\n            }\n            eles.forEach(ele => this.child(ele));\n            return this;\n        }\n        removeChild(el) {\n            this.el.removeChild(el);\n        }\n        child(arg) {\n            let ele = arg;\n            if (typeof arg === 'string') {\n                ele = document.createTextNode(arg);\n            } else if (arg instanceof Element) {\n                ele = arg.el;\n            }\n            this.el.appendChild(ele);\n            return this;\n        }\n        contains(ele) {\n            return this.el.contains(ele);\n        }\n        className(v) {\n            if (v !== undefined) {\n                this.el.className = v;\n                return this;\n            }\n            return this.el.className;\n        }\n        addClass(name) {\n            this.el.classList.add(name);\n            return this;\n        }\n        hasClass(name) {\n            return this.el.classList.contains(name);\n        }\n        removeClass(name) {\n            this.el.classList.remove(name);\n            return this;\n        }\n        toggle(cls = 'active') {\n            return this.toggleClass(cls);\n        }\n        toggleClass(name) {\n            return this.el.classList.toggle(name);\n        }\n        active(flag = true, cls = 'active') {\n            if (flag)\n                this.addClass(cls);\n            else\n                this.removeClass(cls);\n            return this;\n        }\n        checked(flag = true) {\n            this.active(flag, 'checked');\n            return this;\n        }\n        disabled(flag = true) {\n            if (flag)\n                this.addClass('disabled');\n            else\n                this.removeClass('disabled');\n            return this;\n        }\n        attr(key, value) {\n            if (value !== undefined) {\n                this.el.setAttribute(key, value);\n            } else {\n                if (typeof key === 'string') {\n                    return this.el.getAttribute(key);\n                }\n                Object.keys(key).forEach(k => {\n                    this.el.setAttribute(k, key[k]);\n                });\n            }\n            return this;\n        }\n        removeAttr(key) {\n            this.el.removeAttribute(key);\n            return this;\n        }\n        html(content) {\n            if (content !== undefined) {\n                this.el.innerHTML = content;\n                return this;\n            }\n            return this.el.innerHTML;\n        }\n        val(v) {\n            if (v !== undefined) {\n                this.el.value = v;\n                return this;\n            }\n            return this.el.value;\n        }\n        focus() {\n            this.el.focus();\n        }\n        cssRemoveKeys(...keys) {\n            keys.forEach(k => this.el.style.removeProperty(k));\n            return this;\n        }\n        css(name, value) {\n            if (value === undefined && typeof name !== 'string') {\n                Object.keys(name).forEach(k => {\n                    this.el.style[k] = name[k];\n                });\n                return this;\n            }\n            if (value !== undefined) {\n                this.el.style[name] = value;\n                return this;\n            }\n            return this.el.style[name];\n        }\n        computedStyle() {\n            return window.getComputedStyle(this.el, null);\n        }\n        show() {\n            this.css('display', 'block');\n            return this;\n        }\n        hide() {\n            this.css('display', 'none');\n            return this;\n        }\n    }\n    const h = (tag, className = '') => new Element(tag, className);\n    return {\n        Element,\n        h\n    };\n});"]}