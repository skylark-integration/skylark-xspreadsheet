{"version":3,"sources":["component/border_palette.js"],"names":["define","m_element","Icon","DropdownColor","DropdownLineType","m_config","buildTable","trs","h","child","children","buildTd","iconName","cssPrefix","on","this","mode","style","color","change","[object Object]","ddColor","ddType","s","el","table","map","it","call"],"mappings":";;;;;;;AAAAA,QACI,YACA,SACA,mBACA,sBACA,aACD,SAAUC,EAAWC,EAAMC,EAAeC,EAAkBC,GAC3D,aACA,SAASC,KAAcC,GACnB,OAAON,EAAUO,EAAE,QAAS,IAAIC,MAAMR,EAAUO,EAAE,QAAS,IAAIE,YAAYH,IAE/E,SAASI,EAAQC,GACb,OAAOX,EAAUO,EAAE,KAAM,IAAIC,MAAMR,EAAUO,EAAE,SAAWH,EAASQ,iCAAkCJ,MAAM,IAAIP,YAAgBU,MAAcE,GAAG,QAAS,KACrJC,KAAKC,KAAOJ,EACZ,MAAMI,KAACA,EAAIC,MAAEA,EAAKC,MAAEA,GAASH,KAC7BA,KAAKI,QACDH,KAAAA,EACAC,MAAAA,EACAC,MAAAA,OAIZ,aACIE,cACIL,KAAKG,MAAQ,OACbH,KAAKE,MAAQ,OACbF,KAAKC,KAAO,MACZD,KAAKI,OAAS,SAEdJ,KAAKM,QAAU,IAAIlB,EAAc,aAAcY,KAAKG,OACpDH,KAAKM,QAAQF,OAASD,CAAAA,IAClBH,KAAKG,MAAQA,IAEjBH,KAAKO,OAAS,IAAIlB,EAAiBW,KAAKE,OACxCF,KAAKO,OAAOH,OAAS,GAAEI,MACnBR,KAAKE,MAAQM,IAEjBR,KAAKS,GAAKvB,EAAUO,EAAE,SAAWH,EAASQ,4BAC1C,MAAMY,EAAQnB,EAAWL,EAAUO,EAAE,KAAM,IAAIE,SAAST,EAAUO,EAAE,QAAUH,EAASQ,iCAAkCJ,MAAMH,EAAWL,EAAUO,EAAE,KAAM,IAAIE,aAC5J,MACA,SACA,aACA,WACA,WACFgB,IAAIC,GAAMhB,EAAQiB,KAAKb,KAAMY,KAAO1B,EAAUO,EAAE,KAAM,IAAIE,aACxD,OACA,MACA,QACA,SACA,QACFgB,IAAIC,GAAMhB,EAAQiB,KAAKb,KAAMY,OAAS1B,EAAUO,EAAE,QAAUH,EAASQ,kCAAmCH,SAAST,EAAUO,EAAE,SAAWH,EAASQ,yBAA0BJ,MAAMM,KAAKM,QAAQG,IAAKvB,EAAUO,EAAE,SAAWH,EAASQ,yBAA0BJ,MAAMM,KAAKO,OAAOE,OACjRT,KAAKS,GAAGf,MAAMgB","file":"../../component/border_palette.js","sourcesContent":["define([\n    './element',\n    './icon',\n    './dropdown_color',\n    './dropdown_linetype',\n    '../config'\n], function (m_element, Icon, DropdownColor, DropdownLineType, m_config) {\n    'use strict';\n    function buildTable(...trs) {\n        return m_element.h('table', '').child(m_element.h('tbody', '').children(...trs));\n    }\n    function buildTd(iconName) {\n        return m_element.h('td', '').child(m_element.h('div', `${ m_config.cssPrefix }-border-palette-cell`).child(new Icon(`border-${ iconName }`)).on('click', () => {\n            this.mode = iconName;\n            const {mode, style, color} = this;\n            this.change({\n                mode,\n                style,\n                color\n            });\n        }));\n    }\n    return class BorderPalette {\n        constructor() {\n            this.color = '#000';\n            this.style = 'thin';\n            this.mode = 'all';\n            this.change = () => {\n            };\n            this.ddColor = new DropdownColor('line-color', this.color);\n            this.ddColor.change = color => {\n                this.color = color;\n            };\n            this.ddType = new DropdownLineType(this.style);\n            this.ddType.change = ([s]) => {\n                this.style = s;\n            };\n            this.el = m_element.h('div', `${ m_config.cssPrefix }-border-palette`);\n            const table = buildTable(m_element.h('tr', '').children(m_element.h('td', `${ m_config.cssPrefix }-border-palette-left`).child(buildTable(m_element.h('tr', '').children(...[\n                'all',\n                'inside',\n                'horizontal',\n                'vertical',\n                'outside'\n            ].map(it => buildTd.call(this, it))), m_element.h('tr', '').children(...[\n                'left',\n                'top',\n                'right',\n                'bottom',\n                'none'\n            ].map(it => buildTd.call(this, it))))), m_element.h('td', `${ m_config.cssPrefix }-border-palette-right`).children(m_element.h('div', `${ m_config.cssPrefix }-toolbar-btn`).child(this.ddColor.el), m_element.h('div', `${ m_config.cssPrefix }-toolbar-btn`).child(this.ddType.el))));\n            this.el.child(table);\n        }\n    };\n});"]}