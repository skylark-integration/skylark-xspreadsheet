{"version":3,"sources":["component/bottombar.js"],"names":["define","m_element","m_event","m_config","Icon","FormInput","Dropdown","m_message","m_locale","menuItems","key","title","tf","buildMenu","map","it","item","h","cssPrefix","child","on","this","itemClick","hide","call","[object Object]","addFunc","swapFunc","deleteFunc","updateFunc","dataNames","activeEl","deleteEl","items","moreEl","click","super","contentClick","eles","i","css","setContentChildren","clickSwap2","contextMenu","el","children","unbindClickoutside","offset","show","bindClickoutside","menuEl","length","xtoast","name","active","push","evt","offsetLeft","offsetHeight","target","setOffset","left","bottom","v","html","input","val","value","nindex","findIndex","renameItem","focus","clickSwap","reset","index","splice","forEach","removeChild","f","toggle"],"mappings":"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","file":"../../component/bottombar.js","sourcesContent":["define([\n    './element',\n    './event',\n    '../config',\n    './icon',\n    './form_input',\n    './dropdown',\n    './message',\n    '../locale/locale'\n], function (m_element, m_event, m_config, Icon, FormInput, Dropdown, m_message, m_locale) {\n    'use strict';\n    class DropdownMore extends Dropdown {\n        constructor(click) {\n            const icon = new Icon('ellipsis');\n            super(icon, 'auto', false, 'top-left');\n            this.contentClick = click;\n        }\n        reset(items) {\n            const eles = items.map((it, i) => m_element.h('div', `${ m_config.cssPrefix }-item`).css('width', '150px').css('font-weight', 'normal').on('click', () => {\n                this.contentClick(i);\n                this.hide();\n            }).child(it));\n            this.setContentChildren(...eles);\n        }\n        setTitle() {\n        }\n    }\n    const menuItems = [{\n            key: 'delete',\n            title: m_locale.tf('contextmenu.deleteSheet')\n        }];\n    function buildMenuItem(item) {\n        return m_element.h('div', `${ m_config.cssPrefix }-item`).child(item.title()).on('click', () => {\n            this.itemClick(item.key);\n            this.hide();\n        });\n    }\n    function buildMenu() {\n        return menuItems.map(it => buildMenuItem.call(this, it));\n    }\n    class ContextMenu {\n        constructor() {\n            this.el = m_element.h('div', `${ m_config.cssPrefix }-contextmenu`).css('width', '160px').children(...buildMenu.call(this)).hide();\n            this.itemClick = () => {\n            };\n        }\n        hide() {\n            const {el} = this;\n            el.hide();\n            m_event.unbindClickoutside(el);\n        }\n        setOffset(offset) {\n            const {el} = this;\n            el.offset(offset);\n            el.show();\n            m_event.bindClickoutside(el);\n        }\n    }\n    return class Bottombar {\n        constructor(addFunc = () => {\n        }, swapFunc = () => {\n        }, deleteFunc = () => {\n        }, updateFunc = () => {\n        }) {\n            this.swapFunc = swapFunc;\n            this.updateFunc = updateFunc;\n            this.dataNames = [];\n            this.activeEl = null;\n            this.deleteEl = null;\n            this.items = [];\n            this.moreEl = new DropdownMore(i => {\n                this.clickSwap2(this.items[i]);\n            });\n            this.contextMenu = new ContextMenu();\n            this.contextMenu.itemClick = deleteFunc;\n            this.el = m_element.h('div', `${ m_config.cssPrefix }-bottombar`).children(this.contextMenu.el, this.menuEl = m_element.h('ul', `${ m_config.cssPrefix }-menu`).child(m_element.h('li', '').children(new Icon('add').on('click', () => {\n                if (this.dataNames.length < 10) {\n                    addFunc();\n                } else {\n                    m_message.xtoast('tip', 'it less than or equal to 10');\n                }\n            }), m_element.h('span', '').child(this.moreEl))));\n        }\n        addItem(name, active) {\n            this.dataNames.push(name);\n            const item = m_element.h('li', active ? 'active' : '').child(name);\n            item.on('click', () => {\n                this.clickSwap2(item);\n            }).on('contextmenu', evt => {\n                const {offsetLeft, offsetHeight} = evt.target;\n                this.contextMenu.setOffset({\n                    left: offsetLeft,\n                    bottom: offsetHeight + 1\n                });\n                this.deleteEl = item;\n            }).on('dblclick', () => {\n                const v = item.html();\n                const input = new FormInput('auto', '');\n                input.val(v);\n                input.input.on('blur', ({target}) => {\n                    const {value} = target;\n                    const nindex = this.dataNames.findIndex(it => it === v);\n                    this.renameItem(nindex, value);\n                });\n                item.html('').child(input.el);\n                input.focus();\n            });\n            if (active) {\n                this.clickSwap(item);\n            }\n            this.items.push(item);\n            this.menuEl.child(item);\n            this.moreEl.reset(this.dataNames);\n        }\n        renameItem(index, value) {\n            this.dataNames.splice(index, 1, value);\n            this.moreEl.reset(this.dataNames);\n            this.items[index].html('').child(value);\n            this.updateFunc(index, value);\n        }\n        clear() {\n            this.items.forEach(it => {\n                this.menuEl.removeChild(it.el);\n            });\n            this.items = [];\n            this.dataNames = [];\n            this.moreEl.reset(this.dataNames);\n        }\n        deleteItem() {\n            const {activeEl, deleteEl} = this;\n            if (this.items.length > 1) {\n                const index = this.items.findIndex(it => it === deleteEl);\n                this.items.splice(index, 1);\n                this.dataNames.splice(index, 1);\n                this.menuEl.removeChild(deleteEl.el);\n                this.moreEl.reset(this.dataNames);\n                if (activeEl === deleteEl) {\n                    const [f] = this.items;\n                    this.activeEl = f;\n                    this.activeEl.toggle();\n                    return [\n                        index,\n                        0\n                    ];\n                }\n                return [\n                    index,\n                    -1\n                ];\n            }\n            return [-1];\n        }\n        clickSwap2(item) {\n            const index = this.items.findIndex(it => it === item);\n            this.clickSwap(item);\n            this.activeEl.toggle();\n            this.swapFunc(index);\n        }\n        clickSwap(item) {\n            if (this.activeEl !== null) {\n                this.activeEl.toggle();\n            }\n            this.activeEl = item;\n        }\n    };\n});"]}