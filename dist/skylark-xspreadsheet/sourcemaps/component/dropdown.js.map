{"version":3,"sources":["component/dropdown.js"],"names":["define","m_element","m_event","m_config","Element","[object Object]","title","width","showArrow","placement","children","super","cssPrefix","this","change","headerClick","h","child","addClass","contentEl","css","hide","setContentChildren","headerEl","on","show","html","length","parent","active","bindClickoutside","unbindClickoutside"],"mappings":";;;;;;;AAAAA,QACI,YACA,UACA,aACD,SAAUC,EAAWC,EAASC,GAC7B,aACA,qBAA8BF,EAAUG,QACpCC,YAAYC,EAAOC,EAAOC,EAAWC,KAAcC,GAC/CC,MAAM,SAAWR,EAASS,sBAAwBH,KAClDI,KAAKP,MAAQA,EACbO,KAAKC,OAAS,SAEdD,KAAKE,YAAc,SAEE,iBAAVT,EACPO,KAAKP,MAAQL,EAAUe,EAAE,SAAWb,EAASS,4BAA6BK,MAAMX,GACzEE,GACPK,KAAKP,MAAMY,SAAS,cAExBL,KAAKM,UAAYlB,EAAUe,EAAE,SAAWb,EAASS,8BAA+BQ,IAAI,QAASb,GAAOc,OACpGR,KAAKS,sBAAsBZ,GAC3BG,KAAKU,SAAWtB,EAAUe,EAAE,SAAWb,EAASS,6BAChDC,KAAKU,SAASC,GAAG,QAAS,KACgB,UAAlCX,KAAKM,UAAUC,IAAI,WACnBP,KAAKY,OAELZ,KAAKQ,SAEVX,SAASG,KAAKP,MAAOE,EAAYP,EAAUe,EAAE,SAAWb,EAASS,8BAA+BK,MAAMhB,EAAUe,EAAE,SAAWb,EAASS,kCAAqC,IAC9KC,KAAKH,SAASG,KAAKU,SAAUV,KAAKM,WAEtCd,sBAAsBK,GAClBG,KAAKM,UAAUO,KAAK,IAChBhB,EAASiB,OAAS,GAClBd,KAAKM,UAAUT,YAAYA,GAGnCL,SAASC,GACLO,KAAKP,MAAMoB,KAAKpB,GAChBO,KAAKQ,OAEThB,OACI,MAAMc,UAACA,GAAaN,KACpBM,EAAUM,OACVZ,KAAKe,SAASC,SACd3B,EAAQ4B,iBAAiBjB,KAAKe,SAAU,KACpCf,KAAKQ,SAGbhB,OACIQ,KAAKe,SAASC,QAAO,GACrBhB,KAAKM,UAAUE,OACfnB,EAAQ6B,mBAAmBlB,KAAKe","file":"../../component/dropdown.js","sourcesContent":["define([\n    './element',\n    './event',\n    '../config'\n], function (m_element, m_event, m_config) {\n    'use strict';\n    return class Dropdown extends m_element.Element {\n        constructor(title, width, showArrow, placement, ...children) {\n            super('div', `${ m_config.cssPrefix }-dropdown ${ placement }`);\n            this.title = title;\n            this.change = () => {\n            };\n            this.headerClick = () => {\n            };\n            if (typeof title === 'string') {\n                this.title = m_element.h('div', `${ m_config.cssPrefix }-dropdown-title`).child(title);\n            } else if (showArrow) {\n                this.title.addClass('arrow-left');\n            }\n            this.contentEl = m_element.h('div', `${ m_config.cssPrefix }-dropdown-content`).css('width', width).hide();\n            this.setContentChildren(...children);\n            this.headerEl = m_element.h('div', `${ m_config.cssPrefix }-dropdown-header`);\n            this.headerEl.on('click', () => {\n                if (this.contentEl.css('display') !== 'block') {\n                    this.show();\n                } else {\n                    this.hide();\n                }\n            }).children(this.title, showArrow ? m_element.h('div', `${ m_config.cssPrefix }-icon arrow-right`).child(m_element.h('div', `${ m_config.cssPrefix }-icon-img arrow-down`)) : '');\n            this.children(this.headerEl, this.contentEl);\n        }\n        setContentChildren(...children) {\n            this.contentEl.html('');\n            if (children.length > 0) {\n                this.contentEl.children(...children);\n            }\n        }\n        setTitle(title) {\n            this.title.html(title);\n            this.hide();\n        }\n        show() {\n            const {contentEl} = this;\n            contentEl.show();\n            this.parent().active();\n            m_event.bindClickoutside(this.parent(), () => {\n                this.hide();\n            });\n        }\n        hide() {\n            this.parent().active(false);\n            this.contentEl.hide();\n            m_event.unbindClickoutside(this.parent());\n        }\n    };\n});"]}