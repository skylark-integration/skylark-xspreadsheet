{"version":3,"sources":["component/sheet.js"],"names":["define","m_element","m_event","Resizer","Scrollbar","Selector","Editor","Print","ContextMenu","m_table","Toolbar","ModalValidation","SortFilter","m_message","m_config","m_formula","throttle","func","wait","timeout","arg","that","this","args","setTimeout","apply","selectorSet","multiple","ri","ci","indexesUpdated","moving","table","selector","toolbar","data","contextMenu","setMode","cell","getCell","setEnd","trigger","range","set","reset","render","selectorMove","direction","rows","cols","indexes","eri","eci","moveIndexes","len","call","verticalScrollbar","horizontalScrollbar","l","t","left","top","width","height","getSelectedRect","tableOffset","getTableOffset","Math","abs","move","fsw","freezeTotalWidth","fsh","freezeTotalHeight","verticalScrollbarSet","erth","exceptRowTotalHeight","totalHeight","horizontalScrollbarSet","totalWidth","sheetReset","tableEl","overlayerEl","overlayerCEl","el","tOffset","vRect","getRect","attr","offset","css","editor","freeze","fwidth","fheight","setFreezeLengths","resetAreaOffset","clearClipboard","hideClipboard","copy","showClipboard","cut","paste","what","evt","settings","mode","msg","xtoast","cdata","clipboardData","getData","pasteFromText","unhideRowsOrCols","type","index","overlayerMousedown","sortFilter","offsetX","offsetY","isAutofillEl","target","className","cssPrefix","cellRect","getCellRectByXY","autoFilter","includes","items","r","c","hide","getFilter","getSort","setOffset","shiftKey","showAutofill","mouseMoveUp","window","e","buttons","arange","autofill","hideAutofill","paintformatActive","paintformatToggle","editorSetOffset","sOffset","sPosition","editorSet","setCell","getSelectedCell","getSelectedValidator","dataSetCellText","text","state","setSelectedCellText","insertDeleteRowColumn","insert","delete","deleteCell","setSelectedCellAttr","toolbarChange","value","undo","redo","print","preview","autofilter","sheetInitEvents","rowResizer","colResizer","modalValidation","on","indexWidth","tRect","box","cRect","show","isHide","showUnhide","hideUnhide","clear","xyInSelectedRect","setPosition","stopPropagation","detail","scroll","deltaY","deltaX","loopValue","ii","vFunc","i","v","moveY","vertical","rh","getHeight","tempY","tempX","temp","max","test","navigator","userAgent","horizontal","cw","getWidth","moveX","inputChange","bindTouch","d","distance","change","ok","order","o","operator","setAutoFilter","finishedFn","setHeight","setWidth","unhideFn","moveFn","scrolly","resetBRLAreaOffset","scrollx","resetBRTAreaOffset","itext","action","addValidation","removeValidation","itemClick","setValue","getSelectedValidation","hideRowsOrCols","bind","reload","focusing","contains","preventDefault","keyCode","which","key","ctrlKey","metaKey","[object Object]","targetEl","eventMap","Map","view","showToolbar","showContextmenu","h","children","minWidth","formulas","child","Table","eventName","has","get","resetData","setData","setFreeze","viewWidth","viewHeight"],"mappings":"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","file":"../../component/sheet.js","sourcesContent":["define([\n    './element',\n    './event',\n    './resizer',\n    './scrollbar',\n    './selector',\n    './editor',\n    './print',\n    './contextmenu',\n    './table',\n    './toolbar/index',\n    './modal_validation',\n    './sort_filter',\n    './message',\n    '../config',\n    '../core/formula'\n], function (m_element, m_event, Resizer, Scrollbar, Selector, Editor, Print, ContextMenu, m_table, Toolbar, ModalValidation, SortFilter, m_message, m_config, m_formula) {\n    'use strict';\n\n/**\n * @desc throttle fn\n * @param func function\n * @param wait Delay in milliseconds\n */\n    function throttle(func, wait) {\n        let timeout;\n        return (...arg) => {\n            const that = this;\n            const args = arg;\n            if (!timeout) {\n                timeout = setTimeout(() => {\n                    timeout = null;\n                    func.apply(that, args);\n                }, wait);\n            }\n        };\n    }\n    function scrollbarMove() {\n        const {data, verticalScrollbar, horizontalScrollbar} = this;\n        const {l, t, left, top, width, height} = data.getSelectedRect();\n        const tableOffset = this.getTableOffset();\n        if (Math.abs(left) + width > tableOffset.width) {\n            horizontalScrollbar.move({ left: l + width - tableOffset.width });\n        } else {\n            const fsw = data.freezeTotalWidth();\n            if (left < fsw) {\n                horizontalScrollbar.move({ left: l - 1 - fsw });\n            }\n        }\n        if (Math.abs(top) + height > tableOffset.height) {\n            verticalScrollbar.move({ top: t + height - tableOffset.height - 1 });\n        } else {\n            const fsh = data.freezeTotalHeight();\n            if (top < fsh) {\n                verticalScrollbar.move({ top: t - 1 - fsh });\n            }\n        }\n    }\n    function selectorSet(multiple, ri, ci, indexesUpdated = true, moving = false) {\n        if (ri === -1 && ci === -1)\n            return;\n        const {table, selector, toolbar, data, contextMenu} = this;\n        contextMenu.setMode(ri === -1 || ci === -1 ? 'row-col' : 'range');\n        const cell = data.getCell(ri, ci);\n        if (multiple) {\n            selector.setEnd(ri, ci, moving);\n            this.trigger('cells-selected', cell, selector.range);\n        } else {\n            selector.set(ri, ci, indexesUpdated);\n            this.trigger('cell-selected', cell, ri, ci);\n        }\n        toolbar.reset();\n        table.render();\n    }\n\n// multiple: boolean\n// direction: left | right | up | down | row-first | row-last | col-first | col-last\n    function selectorMove(multiple, direction) {\n        const {selector, data} = this;\n        const {rows, cols} = data;\n        let [ri, ci] = selector.indexes;\n        const {eri, eci} = selector.range;\n        if (multiple) {\n            [ri, ci] = selector.moveIndexes;\n        }\n        if (direction === 'left') {\n            if (ci > 0)\n                ci -= 1;\n        } else if (direction === 'right') {\n            if (eci !== ci)\n                ci = eci;\n            if (ci < cols.len - 1)\n                ci += 1;\n        } else if (direction === 'up') {\n            if (ri > 0)\n                ri -= 1;\n        } else if (direction === 'down') {\n            if (eri !== ri)\n                ri = eri;\n            if (ri < rows.len - 1)\n                ri += 1;\n        } else if (direction === 'row-first') {\n            ci = 0;\n        } else if (direction === 'row-last') {\n            ci = cols.len - 1;\n        } else if (direction === 'col-first') {\n            ri = 0;\n        } else if (direction === 'col-last') {\n            ri = rows.len - 1;\n        }\n        if (multiple) {\n            selector.moveIndexes = [\n                ri,\n                ci\n            ];\n        }\n        selectorSet.call(this, multiple, ri, ci);\n        scrollbarMove.call(this);\n    }\n\n// private methods\n    function overlayerMousemove(evt) {\n        if (evt.buttons !== 0)\n            return;\n        if (evt.target.className === `${ m_config.cssPrefix }-resizer-hover`)\n            return;\n        const {offsetX, offsetY} = evt;\n        const {rowResizer, colResizer, tableEl, data} = this;\n        const {rows, cols} = data;\n        if (offsetX > cols.indexWidth && offsetY > rows.height) {\n            rowResizer.hide();\n            colResizer.hide();\n            return;\n        }\n        const tRect = tableEl.box();\n        const cRect = data.getCellRectByXY(evt.offsetX, evt.offsetY);\n        if (cRect.ri >= 0 && cRect.ci === -1) {\n            cRect.width = cols.indexWidth;\n            rowResizer.show(cRect, { width: tRect.width });\n            if (rows.isHide(cRect.ri - 1)) {\n                rowResizer.showUnhide(cRect.ri);\n            } else {\n                rowResizer.hideUnhide();\n            }\n        } else {\n            rowResizer.hide();\n        }\n        if (cRect.ri === -1 && cRect.ci >= 0) {\n            cRect.height = rows.height;\n            colResizer.show(cRect, { height: tRect.height });\n            if (cols.isHide(cRect.ci - 1)) {\n                colResizer.showUnhide(cRect.ci);\n            } else {\n                colResizer.hideUnhide();\n            }\n        } else {\n            colResizer.hide();\n        }\n    }\n    function overlayerMousescroll(evt) {\n        const {verticalScrollbar, horizontalScrollbar, data} = this;\n        const {top} = verticalScrollbar.scroll();\n        const {left} = horizontalScrollbar.scroll();\n        const {rows, cols} = data;\n        const {deltaY, deltaX} = evt;\n        const loopValue = (ii, vFunc) => {\n            let i = ii;\n            let v = 0;\n            do {\n                v = vFunc(i);\n                i += 1;\n            } while (v <= 0);\n            return v;\n        };\n        const moveY = vertical => {\n            if (vertical > 0) {\n                const ri = data.scroll.ri + 1;\n                if (ri < rows.len) {\n                    const rh = loopValue(ri, i => rows.getHeight(i));\n                    verticalScrollbar.move({ top: top + rh - 1 });\n                }\n            } else {\n                const ri = data.scroll.ri - 1;\n                if (ri >= 0) {\n                    const rh = loopValue(ri, i => rows.getHeight(i));\n                    verticalScrollbar.move({ top: ri === 0 ? 0 : top - rh });\n                }\n            }\n        };\n        const moveX = horizontal => {\n            if (horizontal > 0) {\n                const ci = data.scroll.ci + 1;\n                if (ci < cols.len) {\n                    const cw = loopValue(ci, i => cols.getWidth(i));\n                    horizontalScrollbar.move({ left: left + cw - 1 });\n                }\n            } else {\n                const ci = data.scroll.ci - 1;\n                if (ci >= 0) {\n                    const cw = loopValue(ci, i => cols.getWidth(i));\n                    horizontalScrollbar.move({ left: ci === 0 ? 0 : left - cw });\n                }\n            }\n        };\n        const tempY = Math.abs(deltaY);\n        const tempX = Math.abs(deltaX);\n        const temp = Math.max(tempY, tempX);\n        if (/Firefox/i.test(window.navigator.userAgent))\n            throttle(moveY(evt.detail), 50);\n        if (temp === tempX)\n            throttle(moveX(deltaX), 50);\n        if (temp === tempY)\n            throttle(moveY(deltaY), 50);\n    }\n    function overlayerTouch(direction, distance) {\n        const {verticalScrollbar, horizontalScrollbar} = this;\n        const {top} = verticalScrollbar.scroll();\n        const {left} = horizontalScrollbar.scroll();\n        if (direction === 'left' || direction === 'right') {\n            horizontalScrollbar.move({ left: left - distance });\n        } else if (direction === 'up' || direction === 'down') {\n            verticalScrollbar.move({ top: top - distance });\n        }\n    }\n    function verticalScrollbarSet() {\n        const {data, verticalScrollbar} = this;\n        const {height} = this.getTableOffset();\n        const erth = data.exceptRowTotalHeight(0, -1);\n        verticalScrollbar.set(height, data.rows.totalHeight() - erth);\n    }\n    function horizontalScrollbarSet() {\n        const {data, horizontalScrollbar} = this;\n        const {width} = this.getTableOffset();\n        if (data) {\n            horizontalScrollbar.set(width, data.cols.totalWidth());\n        }\n    }\n    function sheetFreeze() {\n        const {selector, data, editor} = this;\n        const [ri, ci] = data.freeze;\n        if (ri > 0 || ci > 0) {\n            const fwidth = data.freezeTotalWidth();\n            const fheight = data.freezeTotalHeight();\n            editor.setFreezeLengths(fwidth, fheight);\n        }\n        selector.resetAreaOffset();\n    }\n    function sheetReset() {\n        const {tableEl, overlayerEl, overlayerCEl, table, toolbar, selector, el} = this;\n        const tOffset = this.getTableOffset();\n        const vRect = this.getRect();\n        tableEl.attr(vRect);\n        overlayerEl.offset(vRect);\n        overlayerCEl.offset(tOffset);\n        el.css('width', `${ vRect.width }px`);\n        verticalScrollbarSet.call(this);\n        horizontalScrollbarSet.call(this);\n        sheetFreeze.call(this);\n        table.render();\n        toolbar.reset();\n        selector.reset();\n    }\n    function clearClipboard() {\n        const {data, selector} = this;\n        data.clearClipboard();\n        selector.hideClipboard();\n    }\n    function copy() {\n        const {data, selector} = this;\n        data.copy();\n        selector.showClipboard();\n    }\n    function cut() {\n        const {data, selector} = this;\n        data.cut();\n        selector.showClipboard();\n    }\n    function paste(what, evt) {\n        const {data} = this;\n        if (data.settings.mode === 'read')\n            return;\n        if (data.paste(what, msg => m_message.xtoast('Tip', msg))) {\n            sheetReset.call(this);\n        } else if (evt) {\n            const cdata = evt.clipboardData.getData('text/plain');\n            this.data.pasteFromText(cdata);\n            sheetReset.call(this);\n        }\n    }\n    function hideRowsOrCols() {\n        this.data.hideRowsOrCols();\n        sheetReset.call(this);\n    }\n    function unhideRowsOrCols(type, index) {\n        this.data.unhideRowsOrCols(type, index);\n        sheetReset.call(this);\n    }\n    function autofilter() {\n        const {data} = this;\n        data.autofilter();\n        sheetReset.call(this);\n    }\n    function toolbarChangePaintformatPaste() {\n        const {toolbar} = this;\n        if (toolbar.paintformatActive()) {\n            paste.call(this, 'format');\n            clearClipboard.call(this);\n            toolbar.paintformatToggle();\n        }\n    }\n    function overlayerMousedown(evt) {\n        const {selector, data, table, sortFilter} = this;\n        const {offsetX, offsetY} = evt;\n        const isAutofillEl = evt.target.className === `${ m_config.cssPrefix }-selector-corner`;\n        const cellRect = data.getCellRectByXY(offsetX, offsetY);\n        const {left, top, width, height} = cellRect;\n        let {ri, ci} = cellRect;\n        const {autoFilter} = data;\n        if (autoFilter.includes(ri, ci)) {\n            if (left + width - 20 < offsetX && top + height - 20 < offsetY) {\n                const items = autoFilter.items(ci, (r, c) => data.rows.getCell(r, c));\n                sortFilter.hide();\n                sortFilter.set(ci, items, autoFilter.getFilter(ci), autoFilter.getSort(ci));\n                sortFilter.setOffset({\n                    left,\n                    top: top + height + 2\n                });\n                return;\n            }\n        }\n        if (!evt.shiftKey) {\n            if (isAutofillEl) {\n                selector.showAutofill(ri, ci);\n            } else {\n                selectorSet.call(this, false, ri, ci);\n            }\n            m_event.mouseMoveUp(window, e => {\n                ({ri, ci} = data.getCellRectByXY(e.offsetX, e.offsetY));\n                if (isAutofillEl) {\n                    selector.showAutofill(ri, ci);\n                } else if (e.buttons === 1 && !e.shiftKey) {\n                    selectorSet.call(this, true, ri, ci, true, true);\n                }\n            }, () => {\n                if (isAutofillEl && selector.arange && data.settings.mode !== 'read') {\n                    if (data.autofill(selector.arange, 'all', msg => m_message.xtoast('Tip', msg))) {\n                        table.render();\n                    }\n                }\n                selector.hideAutofill();\n                toolbarChangePaintformatPaste.call(this);\n            });\n        }\n        if (!isAutofillEl && evt.buttons === 1) {\n            if (evt.shiftKey) {\n                selectorSet.call(this, true, ri, ci);\n            }\n        }\n    }\n    function editorSetOffset() {\n        const {editor, data} = this;\n        const sOffset = data.getSelectedRect();\n        const tOffset = this.getTableOffset();\n        let sPosition = 'top';\n        if (sOffset.top > tOffset.height / 2) {\n            sPosition = 'bottom';\n        }\n        editor.setOffset(sOffset, sPosition);\n    }\n    function editorSet() {\n        const {editor, data} = this;\n        if (data.settings.mode === 'read')\n            return;\n        editorSetOffset.call(this);\n        editor.setCell(data.getSelectedCell(), data.getSelectedValidator());\n        clearClipboard.call(this);\n    }\n    function verticalScrollbarMove(distance) {\n        const {data, table, selector} = this;\n        data.scrolly(distance, () => {\n            selector.resetBRLAreaOffset();\n            editorSetOffset.call(this);\n            table.render();\n        });\n    }\n    function horizontalScrollbarMove(distance) {\n        const {data, table, selector} = this;\n        data.scrollx(distance, () => {\n            selector.resetBRTAreaOffset();\n            editorSetOffset.call(this);\n            table.render();\n        });\n    }\n    function rowResizerFinished(cRect, distance) {\n        const {ri} = cRect;\n        const {table, selector, data} = this;\n        data.rows.setHeight(ri, distance);\n        table.render();\n        selector.resetAreaOffset();\n        verticalScrollbarSet.call(this);\n        editorSetOffset.call(this);\n    }\n    function colResizerFinished(cRect, distance) {\n        const {ci} = cRect;\n        const {table, selector, data} = this;\n        data.cols.setWidth(ci, distance);\n        table.render();\n        selector.resetAreaOffset();\n        horizontalScrollbarSet.call(this);\n        editorSetOffset.call(this);\n    }\n    function dataSetCellText(text, state = 'finished') {\n        const {data, table} = this;\n        if (data.settings.mode === 'read')\n            return;\n        data.setSelectedCellText(text, state);\n        const {ri, ci} = data.selector;\n        if (state === 'finished') {\n            table.render();\n        } else {\n            this.trigger('cell-edited', text, ri, ci);\n        }\n    }\n    function insertDeleteRowColumn(type) {\n        const {data} = this;\n        if (data.settings.mode === 'read')\n            return;\n        if (type === 'insert-row') {\n            data.insert('row');\n        } else if (type === 'delete-row') {\n            data.delete('row');\n        } else if (type === 'insert-column') {\n            data.insert('column');\n        } else if (type === 'delete-column') {\n            data.delete('column');\n        } else if (type === 'delete-cell') {\n            data.deleteCell();\n        } else if (type === 'delete-cell-format') {\n            data.deleteCell('format');\n        } else if (type === 'delete-cell-text') {\n            data.deleteCell('text');\n        } else if (type === 'cell-printable') {\n            data.setSelectedCellAttr('printable', true);\n        } else if (type === 'cell-non-printable') {\n            data.setSelectedCellAttr('printable', false);\n        } else if (type === 'cell-editable') {\n            data.setSelectedCellAttr('editable', true);\n        } else if (type === 'cell-non-editable') {\n            data.setSelectedCellAttr('editable', false);\n        }\n        clearClipboard.call(this);\n        sheetReset.call(this);\n    }\n    function toolbarChange(type, value) {\n        const {data} = this;\n        if (type === 'undo') {\n            this.undo();\n        } else if (type === 'redo') {\n            this.redo();\n        } else if (type === 'print') {\n            this.print.preview();\n        } else if (type === 'paintformat') {\n            if (value === true)\n                copy.call(this);\n            else\n                clearClipboard.call(this);\n        } else if (type === 'clearformat') {\n            insertDeleteRowColumn.call(this, 'delete-cell-format');\n        } else if (type === 'link') {\n        } else if (type === 'chart') {\n        } else if (type === 'autofilter') {\n            autofilter.call(this);\n        } else if (type === 'freeze') {\n            if (value) {\n                const {ri, ci} = data.selector;\n                this.freeze(ri, ci);\n            } else {\n                this.freeze(0, 0);\n            }\n        } else {\n            data.setSelectedCellAttr(type, value);\n            if (type === 'formula' && !data.selector.multiple()) {\n                editorSet.call(this);\n            }\n            sheetReset.call(this);\n        }\n    }\n    function sortFilterChange(ci, order, operator, value) {\n        this.data.setAutoFilter(ci, order, operator, value);\n        sheetReset.call(this);\n    }\n    function sheetInitEvents() {\n        const {selector, overlayerEl, rowResizer, colResizer, verticalScrollbar, horizontalScrollbar, editor, contextMenu, toolbar, modalValidation, sortFilter} = this;\n        overlayerEl.on('mousemove', evt => {\n            overlayerMousemove.call(this, evt);\n        }).on('mousedown', evt => {\n            editor.clear();\n            contextMenu.hide();\n            if (evt.buttons === 2) {\n                if (this.data.xyInSelectedRect(evt.offsetX, evt.offsetY)) {\n                    contextMenu.setPosition(evt.offsetX, evt.offsetY);\n                } else {\n                    overlayerMousedown.call(this, evt);\n                    contextMenu.setPosition(evt.offsetX, evt.offsetY);\n                }\n                evt.stopPropagation();\n            } else if (evt.detail === 2) {\n                editorSet.call(this);\n            } else {\n                overlayerMousedown.call(this, evt);\n            }\n        }).on('mousewheel.stop', evt => {\n            overlayerMousescroll.call(this, evt);\n        }).on('mouseout', evt => {\n            const {offsetX, offsetY} = evt;\n            if (offsetY <= 0)\n                colResizer.hide();\n            if (offsetX <= 0)\n                rowResizer.hide();\n        });\n        selector.inputChange = v => {\n            dataSetCellText.call(this, v, 'input');\n            editorSet.call(this);\n        };\n        m_event.bindTouch(overlayerEl.el, {\n            move: (direction, d) => {\n                overlayerTouch.call(this, direction, d);\n            }\n        });\n        toolbar.change = (type, value) => toolbarChange.call(this, type, value);\n        sortFilter.ok = (ci, order, o, v) => sortFilterChange.call(this, ci, order, o, v);\n        rowResizer.finishedFn = (cRect, distance) => {\n            rowResizerFinished.call(this, cRect, distance);\n        };\n        colResizer.finishedFn = (cRect, distance) => {\n            colResizerFinished.call(this, cRect, distance);\n        };\n        rowResizer.unhideFn = index => {\n            unhideRowsOrCols.call(this, 'row', index);\n        };\n        colResizer.unhideFn = index => {\n            unhideRowsOrCols.call(this, 'col', index);\n        };\n        verticalScrollbar.moveFn = (distance, evt) => {\n            verticalScrollbarMove.call(this, distance, evt);\n        };\n        horizontalScrollbar.moveFn = (distance, evt) => {\n            horizontalScrollbarMove.call(this, distance, evt);\n        };\n        editor.change = (state, itext) => {\n            dataSetCellText.call(this, itext, state);\n        };\n        modalValidation.change = (action, ...args) => {\n            if (action === 'save') {\n                this.data.addValidation(...args);\n            } else {\n                this.data.removeValidation();\n            }\n        };\n        contextMenu.itemClick = type => {\n            if (type === 'validation') {\n                modalValidation.setValue(this.data.getSelectedValidation());\n            } else if (type === 'copy') {\n                copy.call(this);\n            } else if (type === 'cut') {\n                cut.call(this);\n            } else if (type === 'paste') {\n                paste.call(this, 'all');\n            } else if (type === 'paste-value') {\n                paste.call(this, 'text');\n            } else if (type === 'paste-format') {\n                paste.call(this, 'format');\n            } else if (type === 'hide') {\n                hideRowsOrCols.call(this);\n            } else {\n                insertDeleteRowColumn.call(this, type);\n            }\n        };\n        m_event.bind(window, 'resize', () => {\n            this.reload();\n        });\n        m_event.bind(window, 'click', evt => {\n            this.focusing = overlayerEl.contains(evt.target);\n        });\n        m_event.bind(window, 'paste', evt => {\n            paste.call(this, 'all', evt);\n            evt.preventDefault();\n        });\n        m_event.bind(window, 'keydown', evt => {\n            if (!this.focusing)\n                return;\n            const keyCode = evt.keyCode || evt.which;\n            const {key, ctrlKey, shiftKey, metaKey} = evt;\n            if (ctrlKey || metaKey) {\n                switch (keyCode) {\n                case 90:\n                    this.undo();\n                    evt.preventDefault();\n                    break;\n                case 89:\n                    this.redo();\n                    evt.preventDefault();\n                    break;\n                case 67:\n                    copy.call(this);\n                    evt.preventDefault();\n                    break;\n                case 88:\n                    cut.call(this);\n                    evt.preventDefault();\n                    break;\n                case 85:\n                    toolbar.trigger('underline');\n                    evt.preventDefault();\n                    break;\n                case 86:\n                    break;\n                case 37:\n                    selectorMove.call(this, shiftKey, 'row-first');\n                    evt.preventDefault();\n                    break;\n                case 38:\n                    selectorMove.call(this, shiftKey, 'col-first');\n                    evt.preventDefault();\n                    break;\n                case 39:\n                    selectorMove.call(this, shiftKey, 'row-last');\n                    evt.preventDefault();\n                    break;\n                case 40:\n                    selectorMove.call(this, shiftKey, 'col-last');\n                    evt.preventDefault();\n                    break;\n                case 32:\n                    selectorSet.call(this, false, -1, this.data.selector.ci, false);\n                    evt.preventDefault();\n                    break;\n                case 66:\n                    toolbar.trigger('bold');\n                    break;\n                case 73:\n                    toolbar.trigger('italic');\n                    break;\n                default:\n                    break;\n                }\n            } else {\n                switch (keyCode) {\n                case 32:\n                    if (shiftKey) {\n                        selectorSet.call(this, false, this.data.selector.ri, -1, false);\n                    }\n                    break;\n                case 27:\n                    contextMenu.hide();\n                    clearClipboard.call(this);\n                    break;\n                case 37:\n                    selectorMove.call(this, shiftKey, 'left');\n                    evt.preventDefault();\n                    break;\n                case 38:\n                    selectorMove.call(this, shiftKey, 'up');\n                    evt.preventDefault();\n                    break;\n                case 39:\n                    selectorMove.call(this, shiftKey, 'right');\n                    evt.preventDefault();\n                    break;\n                case 40:\n                    selectorMove.call(this, shiftKey, 'down');\n                    evt.preventDefault();\n                    break;\n                case 9:\n                    editor.clear();\n                    selectorMove.call(this, false, shiftKey ? 'left' : 'right');\n                    evt.preventDefault();\n                    break;\n                case 13:\n                    editor.clear();\n                    selectorMove.call(this, false, shiftKey ? 'up' : 'down');\n                    evt.preventDefault();\n                    break;\n                case 8:\n                    insertDeleteRowColumn.call(this, 'delete-cell-text');\n                    evt.preventDefault();\n                    break;\n                default:\n                    break;\n                }\n                if (key === 'Delete') {\n                    insertDeleteRowColumn.call(this, 'delete-cell-text');\n                    evt.preventDefault();\n                } else if (keyCode >= 65 && keyCode <= 90 || keyCode >= 48 && keyCode <= 57 || keyCode >= 96 && keyCode <= 105 || evt.key === '=') {\n                    dataSetCellText.call(this, evt.key, 'input');\n                    editorSet.call(this);\n                } else if (keyCode === 113) {\n                    editorSet.call(this);\n                }\n            }\n        });\n    }\n    \n    class Sheet {\n        constructor(targetEl, data) {\n            this.eventMap = new Map();\n            const {view, showToolbar, showContextmenu} = data.settings;\n            this.el = m_element.h('div', `${ m_config.cssPrefix }-sheet`);\n            this.toolbar = new Toolbar(data, view.width, !showToolbar);\n            this.print = new Print(data);\n            targetEl.children(this.toolbar.el, this.el, this.print.el);\n            this.data = data;\n            this.tableEl = m_element.h('canvas', `${ m_config.cssPrefix }-table`);\n            this.rowResizer = new Resizer(false, data.rows.height);\n            this.colResizer = new Resizer(true, data.cols.minWidth);\n            this.verticalScrollbar = new Scrollbar(true);\n            this.horizontalScrollbar = new Scrollbar(false);\n            this.editor = new Editor(m_formula.formulas, () => this.getTableOffset(), data.rows.height);\n            this.modalValidation = new ModalValidation();\n            this.contextMenu = new ContextMenu(() => this.getRect(), !showContextmenu);\n            this.selector = new Selector(data);\n            this.overlayerCEl = m_element.h('div', `${ m_config.cssPrefix }-overlayer-content`).children(this.editor.el, this.selector.el);\n            this.overlayerEl = m_element.h('div', `${ m_config.cssPrefix }-overlayer`).child(this.overlayerCEl);\n            this.sortFilter = new SortFilter();\n            this.el.children(this.tableEl, this.overlayerEl.el, this.rowResizer.el, this.colResizer.el, this.verticalScrollbar.el, this.horizontalScrollbar.el, this.contextMenu.el, this.modalValidation.el, this.sortFilter.el);\n            this.table = new m_table.Table(this.tableEl.el, data);\n            sheetInitEvents.call(this);\n            sheetReset.call(this);\n            selectorSet.call(this, false, 0, 0);\n        }\n        on(eventName, func) {\n            this.eventMap.set(eventName, func);\n            return this;\n        }\n        trigger(eventName, ...args) {\n            const {eventMap} = this;\n            if (eventMap.has(eventName)) {\n                eventMap.get(eventName).call(this, ...args);\n            }\n        }\n        resetData(data) {\n            this.editor.clear();\n            this.data = data;\n            verticalScrollbarSet.call(this);\n            horizontalScrollbarSet.call(this);\n            this.toolbar.resetData(data);\n            this.print.resetData(data);\n            this.selector.resetData(data);\n            this.table.resetData(data);\n        }\n        loadData(data) {\n            this.data.setData(data);\n            sheetReset.call(this);\n            return this;\n        }\n        freeze(ri, ci) {\n            const {data} = this;\n            data.setFreeze(ri, ci);\n            sheetReset.call(this);\n            return this;\n        }\n        undo() {\n            this.data.undo();\n            sheetReset.call(this);\n        }\n        redo() {\n            this.data.redo();\n            sheetReset.call(this);\n        }\n        reload() {\n            sheetReset.call(this);\n            return this;\n        }\n        getRect() {\n            const {data} = this;\n            return {\n                width: data.viewWidth(),\n                height: data.viewHeight()\n            };\n        }\n        getTableOffset() {\n            const {rows, cols} = this.data;\n            const {width, height} = this.getRect();\n            return {\n                width: width - cols.indexWidth,\n                height: height - rows.height,\n                left: cols.indexWidth,\n                top: rows.height\n            };\n        }\n    }\n\n    return Sheet;\n});"]}