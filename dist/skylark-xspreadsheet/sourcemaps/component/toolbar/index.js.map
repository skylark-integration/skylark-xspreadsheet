{"version":3,"sources":["component/toolbar/index.js"],"names":["define","Align","Valign","Autofilter","Bold","Italic","Strike","Underline","Border","Clearformat","Paintformat","TextColor","FillColor","FontSize","Font","Format","Formula","Freeze","Merge","Redo","Undo","Print","Textwrap","More","a","b","c","buildDivider","h","cssPrefix","moreResize","el","btns","moreEl","btns2","this","moreBtns","contentEl","dd","css","widthFn","elBox","box","sumWidth","sumWidth2","list1","list2","forEach","it","w","index","length","width","push","html","children","show","hide","[object Object]","data","isHide","change","style","defaultStyle","items","undoEl","redoEl","paintformatEl","clearformatEl","formatEl","fontEl","fontSizeEl","boldEl","italicEl","underlineEl","strikeEl","textColorEl","color","fillColorEl","bgcolor","borderEl","mergeEl","alignEl","align","valignEl","valign","textwrapEl","freezeEl","autofilterEl","formulaEl","Array","isArray","i","child","args","reset","setTimeout","rect","marginLeft","marginRight","computedStyle","parseInt","call","bind","window","active","toggle","type","click","getSelectedCellStyle","setState","canUndo","canRedo","canUnmerge","selector","multiple","canAutofilter","font","format","name","size","bold","italic","underline","strike","textwrap","freezeIsActive"],"mappings":"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","file":"../../../component/toolbar/index.js","sourcesContent":["define([\n    './align',\n    './valign',\n    './autofilter',\n    './bold',\n    './italic',\n    './strike',\n    './underline',\n    './border',\n    './clearformat',\n    './paintformat',\n    './text_color',\n    './fill_color',\n    './font_size',\n    './font',\n    './format',\n    './formula',\n    './freeze',\n    './merge',\n    './redo',\n    './undo',\n    './print',\n    './textwrap',\n    './more',\n    '../element',\n    '../../config',\n    '../event'\n], function (Align, Valign, Autofilter, Bold, Italic, Strike, Underline, Border, Clearformat, Paintformat, TextColor, FillColor, FontSize, Font, Format, Formula, Freeze, Merge, Redo, Undo, Print, Textwrap, More, a, b, c) {\n    'use strict';\n    function buildDivider() {\n        return a.h('div', `${ b.cssPrefix }-toolbar-divider`);\n    }\n    function initBtns2() {\n        this.btns2 = [];\n        this.items.forEach(it => {\n            if (Array.isArray(it)) {\n                it.forEach(({el}) => {\n                    const rect = el.box();\n                    const {marginLeft, marginRight} = el.computedStyle();\n                    this.btns2.push([\n                        el,\n                        rect.width + parseInt(marginLeft, 10) + parseInt(marginRight, 10)\n                    ]);\n                });\n            } else {\n                const rect = it.box();\n                const {marginLeft, marginRight} = it.computedStyle();\n                this.btns2.push([\n                    it,\n                    rect.width + parseInt(marginLeft, 10) + parseInt(marginRight, 10)\n                ]);\n            }\n        });\n    }\n    function moreResize() {\n        const {el, btns, moreEl, btns2} = this;\n        const {moreBtns, contentEl} = moreEl.dd;\n        el.css('width', `${ this.widthFn() - 60 }px`);\n        const elBox = el.box();\n        let sumWidth = 160;\n        let sumWidth2 = 12;\n        const list1 = [];\n        const list2 = [];\n        btns2.forEach(([it, w], index) => {\n            sumWidth += w;\n            if (index === btns2.length - 1 || sumWidth < elBox.width) {\n                list1.push(it);\n            } else {\n                sumWidth2 += w;\n                list2.push(it);\n            }\n        });\n        btns.html('').children(...list1);\n        moreBtns.html('').children(...list2);\n        contentEl.css('width', `${ sumWidth2 }px`);\n        if (list2.length > 0) {\n            moreEl.show();\n        } else {\n            moreEl.hide();\n        }\n    }\n    return class Toolbar {\n        constructor(data, widthFn, isHide = false) {\n            this.data = data;\n            this.change = () => {\n            };\n            this.widthFn = widthFn;\n            this.isHide = isHide;\n            const style = data.defaultStyle();\n            this.items = [\n                [\n                    this.undoEl = new Undo(),\n                    this.redoEl = new Redo(),\n                    new Print(),\n                    this.paintformatEl = new Paintformat(),\n                    this.clearformatEl = new Clearformat()\n                ],\n                buildDivider(),\n                [this.formatEl = new Format()],\n                buildDivider(),\n                [\n                    this.fontEl = new Font(),\n                    this.fontSizeEl = new FontSize()\n                ],\n                buildDivider(),\n                [\n                    this.boldEl = new Bold(),\n                    this.italicEl = new Italic(),\n                    this.underlineEl = new Underline(),\n                    this.strikeEl = new Strike(),\n                    this.textColorEl = new TextColor(style.color)\n                ],\n                buildDivider(),\n                [\n                    this.fillColorEl = new FillColor(style.bgcolor),\n                    this.borderEl = new Border(),\n                    this.mergeEl = new Merge()\n                ],\n                buildDivider(),\n                [\n                    this.alignEl = new Align(style.align),\n                    this.valignEl = new Valign(style.valign),\n                    this.textwrapEl = new Textwrap()\n                ],\n                buildDivider(),\n                [\n                    this.freezeEl = new Freeze(),\n                    this.autofilterEl = new Autofilter(),\n                    this.formulaEl = new Formula(),\n                    this.moreEl = new More()\n                ]\n            ];\n            this.el = a.h('div', `${ b.cssPrefix }-toolbar`);\n            this.btns = a.h('div', `${ b.cssPrefix }-toolbar-btns`);\n            this.items.forEach(it => {\n                if (Array.isArray(it)) {\n                    it.forEach(i => {\n                        this.btns.child(i.el);\n                        i.change = (...args) => {\n                            this.change(...args);\n                        };\n                    });\n                } else {\n                    this.btns.child(it.el);\n                }\n            });\n            this.el.child(this.btns);\n            if (isHide) {\n                this.el.hide();\n            } else {\n                this.reset();\n                setTimeout(() => {\n                    initBtns2.call(this);\n                    moreResize.call(this);\n                }, 0);\n                c.bind(window, 'resize', () => {\n                    moreResize.call(this);\n                });\n            }\n        }\n        paintformatActive() {\n            return this.paintformatEl.active();\n        }\n        paintformatToggle() {\n            this.paintformatEl.toggle();\n        }\n        trigger(type) {\n            this[`${ type }El`].click();\n        }\n        resetData(data) {\n            this.data = data;\n            this.reset();\n        }\n        reset() {\n            if (this.isHide)\n                return;\n            const {data} = this;\n            const style = data.getSelectedCellStyle();\n            this.undoEl.setState(!data.canUndo());\n            this.redoEl.setState(!data.canRedo());\n            this.mergeEl.setState(data.canUnmerge(), !data.selector.multiple());\n            this.autofilterEl.setState(!data.canAutofilter());\n            const {font, format} = style;\n            this.formatEl.setState(format);\n            this.fontEl.setState(font.name);\n            this.fontSizeEl.setState(font.size);\n            this.boldEl.setState(font.bold);\n            this.italicEl.setState(font.italic);\n            this.underlineEl.setState(style.underline);\n            this.strikeEl.setState(style.strike);\n            this.textColorEl.setState(style.color);\n            this.fillColorEl.setState(style.bgcolor);\n            this.alignEl.setState(style.align);\n            this.valignEl.setState(style.valign);\n            this.textwrapEl.setState(style.textwrap);\n            this.freezeEl.setState(data.freezeIsActive());\n        }\n    };\n});"]}