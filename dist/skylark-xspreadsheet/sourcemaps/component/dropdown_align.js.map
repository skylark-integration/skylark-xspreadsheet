{"version":3,"sources":["component/dropdown_align.js"],"names":["define","Dropdown","m_element","Icon","m_config","[object Object]","aligns","align","iconName","super","map","it","h","cssPrefix","child","on","this","setTitle","change","title","setName","hide"],"mappings":";;;;;;;AAAAA,QACI,aACA,YACA,SACA,aACD,SAAUC,EAAUC,EAAWC,EAAMC,GACpC,aAIA,qBAAmCH,EAC/BI,YAAYC,EAAQC,GAJxB,IAA2BC,EAUnBC,MALa,IAAIN,WAAeI,KAKpB,QAAQ,EAAM,iBAJVD,EAAOI,IAAIC,IANRH,WAM0CG,IAL1DT,EAAUU,EAAE,SAAWR,EAASS,kBAAmBC,MAAM,IAAIX,EAAKK,KAKDO,GAAG,QAAS,KAC5EC,KAAKC,SAASN,GACdK,KAAKE,OAAOP,OAIpBN,SAASE,GACLS,KAAKG,MAAMC,iBAAkBb,KAC7BS,KAAKK","file":"../../component/dropdown_align.js","sourcesContent":["define([\n    './dropdown',\n    './element',\n    './icon',\n    '../config'\n], function (Dropdown, m_element, Icon, m_config) {\n    'use strict';\n    function buildItemWithIcon(iconName) {\n        return m_element.h('div', `${ m_config.cssPrefix }-item`).child(new Icon(iconName));\n    }\n    return class DropdownAlign extends Dropdown {\n        constructor(aligns, align) {\n            const icon = new Icon(`align-${ align }`);\n            const naligns = aligns.map(it => buildItemWithIcon(`align-${ it }`).on('click', () => {\n                this.setTitle(it);\n                this.change(it);\n            }));\n            super(icon, 'auto', true, 'bottom-left', ...naligns);\n        }\n        setTitle(align) {\n            this.title.setName(`align-${ align }`);\n            this.hide();\n        }\n    };\n});"]}