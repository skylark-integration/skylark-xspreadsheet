{"version":3,"sources":["component/resizer.js"],"names":["define","m_element","m_event","m_config","[object Object]","vertical","minDistance","this","moving","el","h","cssPrefix","children","unhideHoverEl","on","evt","mousedblclickHandler","css","hide","hoverEl","mousedownHandler","lineEl","cRect","finishedFn","unhideFn","index","unhideIndex","show","rect","line","left","top","width","height","offset","hideUnhide","startEvt","distance","mouseMoveUp","window","e","buttons","movementX","movementY"],"mappings":";;;;;;;AAAAA,QACI,YACA,UACA,aACD,SAAUC,EAAWC,EAASC,GAC7B,aACA,aACIC,YAAYC,GAAW,EAAOC,GAC1BC,KAAKC,QAAS,EACdD,KAAKF,SAAWA,EAChBE,KAAKE,GAAKR,EAAUS,EAAE,SAAWP,EAASQ,qBAAuBN,EAAW,WAAa,gBAAiBO,SAASL,KAAKM,cAAgBZ,EAAUS,EAAE,SAAWP,EAASQ,2BAA4BG,GAAG,gBAAiBC,GAAOR,KAAKS,qBAAqBD,IAAME,IAAI,WAAY,YAAYC,OAAQX,KAAKY,QAAUlB,EAAUS,EAAE,SAAWP,EAASQ,2BAA4BG,GAAG,iBAAkBC,GAAOR,KAAKa,iBAAiBL,IAAOR,KAAKc,OAASpB,EAAUS,EAAE,SAAWP,EAASQ,0BAA2BO,QAAQA,OACxfX,KAAKe,MAAQ,KACbf,KAAKgB,WAAa,KAClBhB,KAAKD,YAAcA,EACnBC,KAAKiB,SAAW,SAGpBpB,WAAWqB,GACPlB,KAAKmB,YAAcD,EACnBlB,KAAKM,cAAcc,OAEvBvB,aACIG,KAAKM,cAAcK,OAEvBd,KAAKwB,EAAMC,GACP,MAAMrB,OAACA,EAAMH,SAAEA,EAAQc,QAAEA,EAAOE,OAAEA,EAAMZ,GAAEA,EAAEI,cAAEA,GAAiBN,KAC/D,GAAIC,EACA,OACJD,KAAKe,MAAQM,EACb,MAAME,KAACA,EAAIC,IAAEA,EAAGC,MAAEA,EAAKC,OAAEA,GAAUL,EACnCnB,EAAGyB,QACCJ,KAAMzB,EAAWyB,EAAOE,EAAQ,EAAIF,EACpCC,IAAK1B,EAAW0B,EAAMA,EAAME,EAAS,IACtCN,OACHR,EAAQe,QACJF,MAAO3B,EAAW,EAAI2B,EACtBC,OAAQ5B,EAAW4B,EAAS,IAEhCZ,EAAOa,QACHF,MAAO3B,EAAW,EAAIwB,EAAKG,MAC3BC,OAAQ5B,EAAWwB,EAAKI,OAAS,IAErCpB,EAAcqB,QACVJ,KAAMzB,EAAW,EAAI2B,EAAQF,EAC7BC,IAAK1B,EAAW0B,EAAM,EAAIE,EAC1BD,MAAO3B,EAAW,EAAI2B,EACtBC,OAAQ5B,EAAW4B,EAAS,IAGpC7B,OACIG,KAAKE,GAAGyB,QACJJ,KAAM,EACNC,IAAK,IACNb,OACHX,KAAK4B,aAET/B,uBACQG,KAAKmB,aACLnB,KAAKiB,SAASjB,KAAKmB,aAE3BtB,iBAAiBW,GACb,IAAIqB,EAAWrB,EACf,MAAMN,GAACA,EAAEY,OAAEA,EAAMC,MAAEA,EAAKjB,SAAEA,EAAQC,YAAEA,GAAeC,KACnD,IAAI8B,EAAWhC,EAAWiB,EAAMU,MAAQV,EAAMW,OAC9CZ,EAAOM,OACPzB,EAAQoC,YAAYC,OAAQC,IACxBjC,KAAKC,QAAS,EACG,OAAb4B,GAAmC,IAAdI,EAAEC,UACnBpC,GACAgC,GAAYG,EAAEE,WACCpC,GACXG,EAAGQ,IAAI,UAAYK,EAAMQ,KAAOO,QAGpCA,GAAYG,EAAEG,WACCrC,GACXG,EAAGQ,IAAI,SAAWK,EAAMS,IAAMM,OAGtCD,EAAWI,IAEhB,KACCJ,EAAW,KACXf,EAAOH,OACPX,KAAKC,QAAS,EACdD,KAAKW,OACDX,KAAKgB,aACDc,EAAW/B,IACX+B,EAAW/B,GACfC,KAAKgB,WAAWD,EAAOe","file":"../../component/resizer.js","sourcesContent":["define([\n    './element',\n    './event',\n    '../config'\n], function (m_element, m_event, m_config) {\n    'use strict';\n    return class Resizer {\n        constructor(vertical = false, minDistance) {\n            this.moving = false;\n            this.vertical = vertical;\n            this.el = m_element.h('div', `${ m_config.cssPrefix }-resizer ${ vertical ? 'vertical' : 'horizontal' }`).children(this.unhideHoverEl = m_element.h('div', `${ m_config.cssPrefix }-resizer-hover`).on('dblclick.stop', evt => this.mousedblclickHandler(evt)).css('position', 'absolute').hide(), this.hoverEl = m_element.h('div', `${ m_config.cssPrefix }-resizer-hover`).on('mousedown.stop', evt => this.mousedownHandler(evt)), this.lineEl = m_element.h('div', `${ m_config.cssPrefix }-resizer-line`).hide()).hide();\n            this.cRect = null;\n            this.finishedFn = null;\n            this.minDistance = minDistance;\n            this.unhideFn = () => {\n            };\n        }\n        showUnhide(index) {\n            this.unhideIndex = index;\n            this.unhideHoverEl.show();\n        }\n        hideUnhide() {\n            this.unhideHoverEl.hide();\n        }\n        show(rect, line) {\n            const {moving, vertical, hoverEl, lineEl, el, unhideHoverEl} = this;\n            if (moving)\n                return;\n            this.cRect = rect;\n            const {left, top, width, height} = rect;\n            el.offset({\n                left: vertical ? left + width - 5 : left,\n                top: vertical ? top : top + height - 5\n            }).show();\n            hoverEl.offset({\n                width: vertical ? 5 : width,\n                height: vertical ? height : 5\n            });\n            lineEl.offset({\n                width: vertical ? 0 : line.width,\n                height: vertical ? line.height : 0\n            });\n            unhideHoverEl.offset({\n                left: vertical ? 5 - width : left,\n                top: vertical ? top : 5 - height,\n                width: vertical ? 5 : width,\n                height: vertical ? height : 5\n            });\n        }\n        hide() {\n            this.el.offset({\n                left: 0,\n                top: 0\n            }).hide();\n            this.hideUnhide();\n        }\n        mousedblclickHandler() {\n            if (this.unhideIndex)\n                this.unhideFn(this.unhideIndex);\n        }\n        mousedownHandler(evt) {\n            let startEvt = evt;\n            const {el, lineEl, cRect, vertical, minDistance} = this;\n            let distance = vertical ? cRect.width : cRect.height;\n            lineEl.show();\n            m_event.mouseMoveUp(window, e => {\n                this.moving = true;\n                if (startEvt !== null && e.buttons === 1) {\n                    if (vertical) {\n                        distance += e.movementX;\n                        if (distance > minDistance) {\n                            el.css('left', `${ cRect.left + distance }px`);\n                        }\n                    } else {\n                        distance += e.movementY;\n                        if (distance > minDistance) {\n                            el.css('top', `${ cRect.top + distance }px`);\n                        }\n                    }\n                    startEvt = e;\n                }\n            }, () => {\n                startEvt = null;\n                lineEl.hide();\n                this.moving = false;\n                this.hide();\n                if (this.finishedFn) {\n                    if (distance < minDistance)\n                        distance = minDistance;\n                    this.finishedFn(cRect, distance);\n                }\n            });\n        }\n    };\n});"]}