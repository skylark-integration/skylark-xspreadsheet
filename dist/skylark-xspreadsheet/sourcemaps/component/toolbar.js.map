{"version":3,"sources":["component/toolbar.js"],"names":["define","m_element","m_event","tooltip","DropdownFont","DropdownFontSize","DropdownFormat","DropdownFormula","DropdownColor","DropdownAlign","DropdownBorder","Dropdown","Icon","m_config","m_locale","buildButton","tooltipdata","h","cssPrefix","on","evt","target","attr","buildDivider","buildButtonWithIcon","iconName","change","child","name","toggleChange","type","elName","types","split","length","forEach","it","i","toUpperCase","substring","el","this","toggle","hasClass","DropdownMore","[object Object]","icon","moreBtns","super","contentEl","css","moreResize","btns","moreEl","ddMore","btns2","widthFn","elBox","box","sumWidth","sumWidth2","list1","list2","w","index","width","push","html","children","show","hide","data","isHide","style","defaultStyle","ddFormat","ddFont","ddFormula","ddFontSize","ddTextColor","color","ddFillColor","bgcolor","ddAlign","align","ddVAlign","valign","ddBorder","btnChildren","undoEl","t","redoEl","paintformatEl","call","clearformatEl","fontBoldEl","fontItalicEl","underlineEl","strikeEl","mergeEl","textwrapEl","freezeEl","autofilterEl","key","pt","reset","setTimeout","map","rect","marginLeft","marginRight","computedStyle","parseInt","bind","window","getSelectedCellStyle","cell","getSelectedCell","disabled","canUndo","canRedo","active","canUnmerge","selector","multiple","canAutofilter","font","setTitle","size","bold","italic","underline","strike","textwrap","freezeIsActive","format"],"mappings":"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","file":"../../component/toolbar.js","sourcesContent":["define([\n    './element',\n    './event',\n    './tooltip',\n    './dropdown_font',\n    './dropdown_fontsize',\n    './dropdown_format',\n    './dropdown_formula',\n    './dropdown_color',\n    './dropdown_align',\n    './dropdown_border',\n    './dropdown',\n    './icon',\n    '../config',\n    '../locale/locale'\n], function (m_element, m_event, tooltip, DropdownFont, DropdownFontSize, DropdownFormat, DropdownFormula, DropdownColor, DropdownAlign, DropdownBorder, Dropdown, Icon, m_config, m_locale) {\n    'use strict';\n    function buildIcon(name) {\n        return new Icon(name);\n    }\n    function buildButton(tooltipdata) {\n        return m_element.h('div', `${ m_config.cssPrefix }-toolbar-btn`).on('mouseenter', evt => {\n            tooltip(tooltipdata, evt.target);\n        }).attr('data-tooltip', tooltipdata);\n    }\n    function buildDivider() {\n        return m_element.h('div', `${ m_config.cssPrefix }-toolbar-divider`);\n    }\n    function buildButtonWithIcon(tooltipdata, iconName, change = () => {\n    }) {\n        return buildButton(tooltipdata).child(buildIcon(iconName)).on('click', () => change());\n    }\n    function bindDropdownChange() {\n        this.ddFormat.change = it => this.change('format', it.key);\n        this.ddFont.change = it => this.change('font-name', it.key);\n        this.ddFormula.change = it => this.change('formula', it.key);\n        this.ddFontSize.change = it => this.change('font-size', it.pt);\n        this.ddTextColor.change = it => this.change('color', it);\n        this.ddFillColor.change = it => this.change('bgcolor', it);\n        this.ddAlign.change = it => this.change('align', it);\n        this.ddVAlign.change = it => this.change('valign', it);\n        this.ddBorder.change = it => this.change('border', it);\n    }\n    function toggleChange(type) {\n        let elName = type;\n        const types = type.split('-');\n        if (types.length > 1) {\n            types.forEach((it, i) => {\n                if (i === 0)\n                    elName = it;\n                else\n                    elName += it[0].toUpperCase() + it.substring(1);\n            });\n        }\n        const el = this[`${ elName }El`];\n        el.toggle();\n        this.change(type, el.hasClass('active'));\n    }\n    class DropdownMore extends Dropdown {\n        constructor() {\n            const icon = new Icon('ellipsis');\n            const moreBtns = m_element.h('div', `${ m_config.cssPrefix }-toolbar-more`);\n            super(icon, 'auto', false, 'bottom-right', moreBtns);\n            this.moreBtns = moreBtns;\n            this.contentEl.css('max-width', '420px');\n        }\n    }\n    function initBtns2() {\n        this.btns2 = this.btnChildren.map(it => {\n            const rect = it.box();\n            const {marginLeft, marginRight} = it.computedStyle();\n            return [\n                it,\n                rect.width + parseInt(marginLeft, 10) + parseInt(marginRight, 10)\n            ];\n        });\n    }\n    function moreResize() {\n        const {el, btns, moreEl, ddMore, btns2} = this;\n        const {moreBtns, contentEl} = ddMore;\n        el.css('width', `${ this.widthFn() - 60 }px`);\n        const elBox = el.box();\n        let sumWidth = 160;\n        let sumWidth2 = 12;\n        const list1 = [];\n        const list2 = [];\n        btns2.forEach(([it, w], index) => {\n            sumWidth += w;\n            if (index === btns2.length - 1 || sumWidth < elBox.width) {\n                list1.push(it);\n            } else {\n                sumWidth2 += w;\n                list2.push(it);\n            }\n        });\n        btns.html('').children(...list1);\n        moreBtns.html('').children(...list2);\n        contentEl.css('width', `${ sumWidth2 }px`);\n        if (list2.length > 0) {\n            moreEl.show();\n        } else {\n            moreEl.hide();\n        }\n    }\n    class Toolbar {\n        constructor(data, widthFn, isHide = false) {\n            this.data = data;\n            this.change = () => {\n            };\n            this.widthFn = widthFn;\n            const style = data.defaultStyle();\n            this.ddFormat = new DropdownFormat();\n            this.ddFont = new DropdownFont();\n            this.ddFormula = new DropdownFormula();\n            this.ddFontSize = new DropdownFontSize();\n            this.ddTextColor = new DropdownColor('text-color', style.color);\n            this.ddFillColor = new DropdownColor('fill-color', style.bgcolor);\n            this.ddAlign = new DropdownAlign([\n                'left',\n                'center',\n                'right'\n            ], style.align);\n            this.ddVAlign = new DropdownAlign([\n                'top',\n                'middle',\n                'bottom'\n            ], style.valign);\n            this.ddBorder = new DropdownBorder();\n            this.ddMore = new DropdownMore();\n            this.btnChildren = [\n                this.undoEl = buildButtonWithIcon(`${ m_locale.t('toolbar.undo') } (Ctrl+Z)`, 'undo', () => this.change('undo')),\n                this.redoEl = buildButtonWithIcon(`${ m_locale.t('toolbar.undo') } (Ctrl+Y)`, 'redo', () => this.change('redo')),\n                this.paintformatEl = buildButtonWithIcon(`${ m_locale.t('toolbar.paintformat') }`, 'paintformat', () => toggleChange.call(this, 'paintformat')),\n                this.clearformatEl = buildButtonWithIcon(`${ m_locale.t('toolbar.clearformat') }`, 'clearformat', () => this.change('clearformat')),\n                buildDivider(),\n                buildButton(`${ m_locale.t('toolbar.format') }`).child(this.ddFormat.el),\n                buildDivider(),\n                buildButton(`${ m_locale.t('toolbar.font') }`).child(this.ddFont.el),\n                buildButton(`${ m_locale.t('toolbar.fontSize') }`).child(this.ddFontSize.el),\n                buildDivider(),\n                this.fontBoldEl = buildButtonWithIcon(`${ m_locale.t('toolbar.fontBold') } (Ctrl+B)`, 'bold', () => toggleChange.call(this, 'font-bold')),\n                this.fontItalicEl = buildButtonWithIcon(`${ m_locale.t('toolbar.fontItalic') } (Ctrl+I)`, 'italic', () => toggleChange.call(this, 'font-italic')),\n                this.underlineEl = buildButtonWithIcon(`${ m_locale.t('toolbar.underline') } (Ctrl+U)`, 'underline', () => toggleChange.call(this, 'underline')),\n                this.strikeEl = buildButtonWithIcon(`${ m_locale.t('toolbar.strike') }`, 'strike', () => toggleChange.call(this, 'strike')),\n                buildButton(`${ m_locale.t('toolbar.textColor') }`).child(this.ddTextColor.el),\n                buildDivider(),\n                buildButton(`${ m_locale.t('toolbar.fillColor') }`).child(this.ddFillColor.el),\n                buildButton(`${ m_locale.t('toolbar.border') }`).child(this.ddBorder.el),\n                this.mergeEl = buildButtonWithIcon(`${ m_locale.t('toolbar.merge') }`, 'merge', () => toggleChange.call(this, 'merge')),\n                buildDivider(),\n                buildButton(`${ m_locale.t('toolbar.align') }`).child(this.ddAlign.el),\n                buildButton(`${ m_locale.t('toolbar.valign') }`).child(this.ddVAlign.el),\n                this.textwrapEl = buildButtonWithIcon(`${ m_locale.t('toolbar.textwrap') }`, 'textwrap', () => toggleChange.call(this, 'textwrap')),\n                buildDivider(),\n                this.freezeEl = buildButtonWithIcon(`${ m_locale.t('toolbar.freeze') }`, 'freeze', () => toggleChange.call(this, 'freeze')),\n                this.autofilterEl = buildButtonWithIcon(`${ m_locale.t('toolbar.autofilter') }`, 'autofilter', () => toggleChange.call(this, 'autofilter')),\n                buildButton(`${ m_locale.t('toolbar.formula') }`).child(this.ddFormula.el),\n                this.moreEl = buildButton(`${ m_locale.t('toolbar.more') }`).child(this.ddMore.el).hide()\n            ];\n            this.el = m_element.h('div', `${ m_config.cssPrefix }-toolbar`);\n            this.btns = m_element.h('div', `${ m_config.cssPrefix }-toolbar-btns`).children(...this.btnChildren);\n            this.el.child(this.btns);\n            if (isHide)\n                this.el.hide();\n            bindDropdownChange.call(this);\n            this.reset();\n            setTimeout(() => {\n                initBtns2.call(this);\n                moreResize.call(this);\n            }, 0);\n            m_event.bind(window, 'resize', () => {\n                moreResize.call(this);\n            });\n        }\n        paintformatActive() {\n            return this.paintformatEl.hasClass('active');\n        }\n        paintformatToggle() {\n            this.paintformatEl.toggle();\n        }\n        trigger(type) {\n            toggleChange.call(this, type);\n        }\n        reset() {\n            const {data} = this;\n            const style = data.getSelectedCellStyle();\n            const cell = data.getSelectedCell();\n            this.undoEl.disabled(!data.canUndo());\n            this.redoEl.disabled(!data.canRedo());\n            this.mergeEl.active(data.canUnmerge()).disabled(!data.selector.multiple());\n            this.autofilterEl.active(!data.canAutofilter());\n            const {font} = style;\n            this.ddFont.setTitle(font.name);\n            this.ddFontSize.setTitle(font.size);\n            this.fontBoldEl.active(font.bold);\n            this.fontItalicEl.active(font.italic);\n            this.underlineEl.active(style.underline);\n            this.strikeEl.active(style.strike);\n            this.ddTextColor.setTitle(style.color);\n            this.ddFillColor.setTitle(style.bgcolor);\n            this.ddAlign.setTitle(style.align);\n            this.ddVAlign.setTitle(style.valign);\n            this.textwrapEl.active(style.textwrap);\n            this.freezeEl.active(data.freezeIsActive());\n            if (cell) {\n                if (cell.format) {\n                    this.ddFormat.setTitle(cell.format);\n                }\n            }\n        }\n    }\n\n    return Toolbar;\n});"]}