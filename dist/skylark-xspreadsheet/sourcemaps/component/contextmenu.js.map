{"version":3,"sources":["component/contextmenu.js"],"names":["define","m_element","m_event","m_config","m_locale","menuItems","key","title","tf","label","buildMenu","map","it","item","h","cssPrefix","on","this","itemClick","hide","children","child","call","[object Object]","viewFn","isHide","el","setMode","mode","hideEl","show","unbindClickoutside","x","y","width","offset","view","vhf","height","left","css","bindClickoutside"],"mappings":";;;;;;;AAAAA,QACI,YACA,UACA,YACA,oBACD,SAAUC,EAAWC,EAASC,EAAUC,GACvC,aACA,MAAMC,IAEEC,IAAK,OACLC,MAAOH,EAASI,GAAG,oBACnBC,MAAO,WAGPH,IAAK,MACLC,MAAOH,EAASI,GAAG,mBACnBC,MAAO,WAGPH,IAAK,QACLC,MAAOH,EAASI,GAAG,qBACnBC,MAAO,WAGPH,IAAK,cACLC,MAAOH,EAASI,GAAG,0BACnBC,MAAO,iBAGPH,IAAK,eACLC,MAAOH,EAASI,GAAG,2BACnBC,MAAO,eAETH,IAAK,YAEHA,IAAK,aACLC,MAAOH,EAASI,GAAG,2BAGnBF,IAAK,gBACLC,MAAOH,EAASI,GAAG,8BAErBF,IAAK,YAEHA,IAAK,aACLC,MAAOH,EAASI,GAAG,2BAGnBF,IAAK,gBACLC,MAAOH,EAASI,GAAG,8BAGnBF,IAAK,mBACLC,MAAOH,EAASI,GAAG,gCAGnBF,IAAK,OACLC,MAAOH,EAASI,GAAG,sBAErBF,IAAK,YAEHA,IAAK,aACLC,MAAOH,EAASI,GAAG,4BAErBF,IAAK,YAEHA,IAAK,iBACLC,MAAOH,EAASI,GAAG,+BAGnBF,IAAK,qBACLC,MAAOH,EAASI,GAAG,kCAErBF,IAAK,YAEHA,IAAK,gBACLC,MAAOH,EAASI,GAAG,8BAGnBF,IAAK,oBACLC,MAAOH,EAASI,GAAG,iCAY3B,SAASE,IACL,OAAOL,EAAUM,IAAIC,IAVzB,SAAuBC,GACnB,MAAiB,YAAbA,EAAKP,IACEL,EAAUa,EAAE,SAAWX,EAASY,0BAEpCd,EAAUa,EAAE,SAAWX,EAASY,kBAAmBC,GAAG,QAAS,KAClEC,KAAKC,UAAUL,EAAKP,KACpBW,KAAKE,SACNC,SAASP,EAAKN,QAASN,EAAUa,EAAE,MAAO,SAASO,MAAMR,EAAKJ,OAAS,OAGjCa,KAAKL,KAAML,IA+CxD,aA3CIW,YAAYC,EAAQC,GAAS,GACzBR,KAAKZ,UAAYK,EAAUY,KAAKL,MAChCA,KAAKS,GAAKzB,EAAUa,EAAE,SAAWX,EAASY,yBAA0BK,YAAYH,KAAKZ,WAAWc,OAChGF,KAAKO,OAASA,EACdP,KAAKC,UAAY,SAEjBD,KAAKQ,OAASA,EACdR,KAAKU,QAAQ,SAEjBJ,QAAQK,GACJ,MAAMC,EAASZ,KAAKZ,UAAU,IACjB,YAATuB,EACAC,EAAOC,OAEPD,EAAOV,OAGfI,OACI,MAAMG,GAACA,GAAMT,KACbS,EAAGP,OACHjB,EAAQ6B,mBAAmBL,GAE/BH,YAAYS,EAAGC,GACX,GAAIhB,KAAKQ,OACL,OACJ,MAAMC,GAACA,GAAMT,MACPiB,MAACA,GAASR,EAAGI,OAAOK,SACpBC,EAAOnB,KAAKO,SACZa,EAAMD,EAAKE,OAAS,EAC1B,IAAIC,EAAOP,EACPI,EAAKF,MAAQF,GAAKE,IAClBK,GAAQL,GAEZR,EAAGc,IAAI,UAAYD,OACfN,EAAII,EACJX,EAAGc,IAAI,YAAcJ,EAAKE,OAASL,OAAQO,IAAI,gBAAkBP,OAAQO,IAAI,MAAO,QAEpFd,EAAGc,IAAI,SAAWP,OAAQO,IAAI,gBAAkBJ,EAAKE,OAASL,OAAQO,IAAI,SAAU,QAExFtC,EAAQuC,iBAAiBf","file":"../../component/contextmenu.js","sourcesContent":["define([\n    './element',\n    './event',\n    '../config',\n    '../locale/locale'\n], function (m_element, m_event, m_config, m_locale) {\n    'use strict';\n    const menuItems = [\n        {\n            key: 'copy',\n            title: m_locale.tf('contextmenu.copy'),\n            label: 'Ctrl+C'\n        },\n        {\n            key: 'cut',\n            title: m_locale.tf('contextmenu.cut'),\n            label: 'Ctrl+X'\n        },\n        {\n            key: 'paste',\n            title: m_locale.tf('contextmenu.paste'),\n            label: 'Ctrl+V'\n        },\n        {\n            key: 'paste-value',\n            title: m_locale.tf('contextmenu.pasteValue'),\n            label: 'Ctrl+Shift+V'\n        },\n        {\n            key: 'paste-format',\n            title: m_locale.tf('contextmenu.pasteFormat'),\n            label: 'Ctrl+Alt+V'\n        },\n        { key: 'divider' },\n        {\n            key: 'insert-row',\n            title: m_locale.tf('contextmenu.insertRow')\n        },\n        {\n            key: 'insert-column',\n            title: m_locale.tf('contextmenu.insertColumn')\n        },\n        { key: 'divider' },\n        {\n            key: 'delete-row',\n            title: m_locale.tf('contextmenu.deleteRow')\n        },\n        {\n            key: 'delete-column',\n            title: m_locale.tf('contextmenu.deleteColumn')\n        },\n        {\n            key: 'delete-cell-text',\n            title: m_locale.tf('contextmenu.deleteCellText')\n        },\n        {\n            key: 'hide',\n            title: m_locale.tf('contextmenu.hide')\n        },\n        { key: 'divider' },\n        {\n            key: 'validation',\n            title: m_locale.tf('contextmenu.validation')\n        },\n        { key: 'divider' },\n        {\n            key: 'cell-printable',\n            title: m_locale.tf('contextmenu.cellprintable')\n        },\n        {\n            key: 'cell-non-printable',\n            title: m_locale.tf('contextmenu.cellnonprintable')\n        },\n        { key: 'divider' },\n        {\n            key: 'cell-editable',\n            title: m_locale.tf('contextmenu.celleditable')\n        },\n        {\n            key: 'cell-non-editable',\n            title: m_locale.tf('contextmenu.cellnoneditable')\n        }\n    ];\n    function buildMenuItem(item) {\n        if (item.key === 'divider') {\n            return m_element.h('div', `${ m_config.cssPrefix }-item divider`);\n        }\n        return m_element.h('div', `${ m_config.cssPrefix }-item`).on('click', () => {\n            this.itemClick(item.key);\n            this.hide();\n        }).children(item.title(), m_element.h('div', 'label').child(item.label || ''));\n    }\n    function buildMenu() {\n        return menuItems.map(it => buildMenuItem.call(this, it));\n    }\n\n    class ContextMenu {\n        constructor(viewFn, isHide = false) {\n            this.menuItems = buildMenu.call(this);\n            this.el = m_element.h('div', `${ m_config.cssPrefix }-contextmenu`).children(...this.menuItems).hide();\n            this.viewFn = viewFn;\n            this.itemClick = () => {\n            };\n            this.isHide = isHide;\n            this.setMode('range');\n        }\n        setMode(mode) {\n            const hideEl = this.menuItems[12];\n            if (mode === 'row-col') {\n                hideEl.show();\n            } else {\n                hideEl.hide();\n            }\n        }\n        hide() {\n            const {el} = this;\n            el.hide();\n            m_event.unbindClickoutside(el);\n        }\n        setPosition(x, y) {\n            if (this.isHide)\n                return;\n            const {el} = this;\n            const {width} = el.show().offset();\n            const view = this.viewFn();\n            const vhf = view.height / 2;\n            let left = x;\n            if (view.width - x <= width) {\n                left -= width;\n            }\n            el.css('left', `${ left }px`);\n            if (y > vhf) {\n                el.css('bottom', `${ view.height - y }px`).css('max-height', `${ y }px`).css('top', 'auto');\n            } else {\n                el.css('top', `${ y }px`).css('max-height', `${ view.height - y }px`).css('bottom', 'auto');\n            }\n            m_event.bindClickoutside(el);\n        }\n    }\n\n    return ContextMenu;\n});"]}